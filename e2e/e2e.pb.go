// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.15.2
// source: e2e/e2e.proto

package e2e

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type RootEnum int32

const (
	RootEnum_ABC RootEnum = 0
	RootEnum_DEF RootEnum = 1
	RootEnum_GAH RootEnum = 2
)

// Enum value maps for RootEnum.
var (
	RootEnum_name = map[int32]string{
		0: "ABC",
		1: "DEF",
		2: "GAH",
	}
	RootEnum_value = map[string]int32{
		"ABC": 0,
		"DEF": 1,
		"GAH": 2,
	}
)

func (x RootEnum) Enum() *RootEnum {
	p := new(RootEnum)
	*p = x
	return p
}

func (x RootEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RootEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_e2e_e2e_proto_enumTypes[0].Descriptor()
}

func (RootEnum) Type() protoreflect.EnumType {
	return &file_e2e_e2e_proto_enumTypes[0]
}

func (x RootEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RootEnum.Descriptor instead.
func (RootEnum) EnumDescriptor() ([]byte, []int) {
	return file_e2e_e2e_proto_rawDescGZIP(), []int{0}
}

type ScreamingSnakeWithPrefix int32

const (
	ScreamingSnakeWithPrefix_SCREAMING_SNAKE_WITH_PREFIX_ABC ScreamingSnakeWithPrefix = 0
	ScreamingSnakeWithPrefix_SCREAMING_SNAKE_WITH_PREFIX_DEF ScreamingSnakeWithPrefix = 1
	ScreamingSnakeWithPrefix_SCREAMING_SNAKE_WITH_PREFIX_GAH ScreamingSnakeWithPrefix = 2
)

// Enum value maps for ScreamingSnakeWithPrefix.
var (
	ScreamingSnakeWithPrefix_name = map[int32]string{
		0: "SCREAMING_SNAKE_WITH_PREFIX_ABC",
		1: "SCREAMING_SNAKE_WITH_PREFIX_DEF",
		2: "SCREAMING_SNAKE_WITH_PREFIX_GAH",
	}
	ScreamingSnakeWithPrefix_value = map[string]int32{
		"SCREAMING_SNAKE_WITH_PREFIX_ABC": 0,
		"SCREAMING_SNAKE_WITH_PREFIX_DEF": 1,
		"SCREAMING_SNAKE_WITH_PREFIX_GAH": 2,
	}
)

func (x ScreamingSnakeWithPrefix) Enum() *ScreamingSnakeWithPrefix {
	p := new(ScreamingSnakeWithPrefix)
	*p = x
	return p
}

func (x ScreamingSnakeWithPrefix) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ScreamingSnakeWithPrefix) Descriptor() protoreflect.EnumDescriptor {
	return file_e2e_e2e_proto_enumTypes[1].Descriptor()
}

func (ScreamingSnakeWithPrefix) Type() protoreflect.EnumType {
	return &file_e2e_e2e_proto_enumTypes[1]
}

func (x ScreamingSnakeWithPrefix) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ScreamingSnakeWithPrefix.Descriptor instead.
func (ScreamingSnakeWithPrefix) EnumDescriptor() ([]byte, []int) {
	return file_e2e_e2e_proto_rawDescGZIP(), []int{1}
}

type Nested_Enum int32

const (
	Nested_ABC Nested_Enum = 0
	Nested_DEF Nested_Enum = 1
	Nested_GAH Nested_Enum = 2
)

// Enum value maps for Nested_Enum.
var (
	Nested_Enum_name = map[int32]string{
		0: "ABC",
		1: "DEF",
		2: "GAH",
	}
	Nested_Enum_value = map[string]int32{
		"ABC": 0,
		"DEF": 1,
		"GAH": 2,
	}
)

func (x Nested_Enum) Enum() *Nested_Enum {
	p := new(Nested_Enum)
	*p = x
	return p
}

func (x Nested_Enum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Nested_Enum) Descriptor() protoreflect.EnumDescriptor {
	return file_e2e_e2e_proto_enumTypes[2].Descriptor()
}

func (Nested_Enum) Type() protoreflect.EnumType {
	return &file_e2e_e2e_proto_enumTypes[2]
}

func (x Nested_Enum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Nested_Enum.Descriptor instead.
func (Nested_Enum) EnumDescriptor() ([]byte, []int) {
	return file_e2e_e2e_proto_rawDescGZIP(), []int{0, 0}
}

type Deeply_Nested_Enum int32

const (
	Deeply_Nested_ABC Deeply_Nested_Enum = 0
	Deeply_Nested_DEF Deeply_Nested_Enum = 1
	Deeply_Nested_GAH Deeply_Nested_Enum = 2
)

// Enum value maps for Deeply_Nested_Enum.
var (
	Deeply_Nested_Enum_name = map[int32]string{
		0: "ABC",
		1: "DEF",
		2: "GAH",
	}
	Deeply_Nested_Enum_value = map[string]int32{
		"ABC": 0,
		"DEF": 1,
		"GAH": 2,
	}
)

func (x Deeply_Nested_Enum) Enum() *Deeply_Nested_Enum {
	p := new(Deeply_Nested_Enum)
	*p = x
	return p
}

func (x Deeply_Nested_Enum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Deeply_Nested_Enum) Descriptor() protoreflect.EnumDescriptor {
	return file_e2e_e2e_proto_enumTypes[3].Descriptor()
}

func (Deeply_Nested_Enum) Type() protoreflect.EnumType {
	return &file_e2e_e2e_proto_enumTypes[3]
}

func (x Deeply_Nested_Enum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Deeply_Nested_Enum.Descriptor instead.
func (Deeply_Nested_Enum) EnumDescriptor() ([]byte, []int) {
	return file_e2e_e2e_proto_rawDescGZIP(), []int{1, 0, 0}
}

type Nested struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Nested) Reset() {
	*x = Nested{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2e_e2e_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Nested) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Nested) ProtoMessage() {}

func (x *Nested) ProtoReflect() protoreflect.Message {
	mi := &file_e2e_e2e_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Nested.ProtoReflect.Descriptor instead.
func (*Nested) Descriptor() ([]byte, []int) {
	return file_e2e_e2e_proto_rawDescGZIP(), []int{0}
}

type Deeply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Deeply) Reset() {
	*x = Deeply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2e_e2e_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Deeply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Deeply) ProtoMessage() {}

func (x *Deeply) ProtoReflect() protoreflect.Message {
	mi := &file_e2e_e2e_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Deeply.ProtoReflect.Descriptor instead.
func (*Deeply) Descriptor() ([]byte, []int) {
	return file_e2e_e2e_proto_rawDescGZIP(), []int{1}
}

type MessageWithRootEnum struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field RootEnum `protobuf:"varint,1,opt,name=field,proto3,enum=RootEnum" json:"field,omitempty"`
}

func (x *MessageWithRootEnum) Reset() {
	*x = MessageWithRootEnum{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2e_e2e_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageWithRootEnum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageWithRootEnum) ProtoMessage() {}

func (x *MessageWithRootEnum) ProtoReflect() protoreflect.Message {
	mi := &file_e2e_e2e_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageWithRootEnum.ProtoReflect.Descriptor instead.
func (*MessageWithRootEnum) Descriptor() ([]byte, []int) {
	return file_e2e_e2e_proto_rawDescGZIP(), []int{2}
}

func (x *MessageWithRootEnum) GetField() RootEnum {
	if x != nil {
		return x.Field
	}
	return RootEnum_ABC
}

type MessageWithNestedEnum struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field Nested_Enum `protobuf:"varint,1,opt,name=field,proto3,enum=Nested_Enum" json:"field,omitempty"`
}

func (x *MessageWithNestedEnum) Reset() {
	*x = MessageWithNestedEnum{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2e_e2e_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageWithNestedEnum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageWithNestedEnum) ProtoMessage() {}

func (x *MessageWithNestedEnum) ProtoReflect() protoreflect.Message {
	mi := &file_e2e_e2e_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageWithNestedEnum.ProtoReflect.Descriptor instead.
func (*MessageWithNestedEnum) Descriptor() ([]byte, []int) {
	return file_e2e_e2e_proto_rawDescGZIP(), []int{3}
}

func (x *MessageWithNestedEnum) GetField() Nested_Enum {
	if x != nil {
		return x.Field
	}
	return Nested_ABC
}

type MessageWithDeeplyNestedEnum struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field Deeply_Nested_Enum `protobuf:"varint,1,opt,name=field,proto3,enum=Deeply_Nested_Enum" json:"field,omitempty"`
}

func (x *MessageWithDeeplyNestedEnum) Reset() {
	*x = MessageWithDeeplyNestedEnum{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2e_e2e_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageWithDeeplyNestedEnum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageWithDeeplyNestedEnum) ProtoMessage() {}

func (x *MessageWithDeeplyNestedEnum) ProtoReflect() protoreflect.Message {
	mi := &file_e2e_e2e_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageWithDeeplyNestedEnum.ProtoReflect.Descriptor instead.
func (*MessageWithDeeplyNestedEnum) Descriptor() ([]byte, []int) {
	return file_e2e_e2e_proto_rawDescGZIP(), []int{4}
}

func (x *MessageWithDeeplyNestedEnum) GetField() Deeply_Nested_Enum {
	if x != nil {
		return x.Field
	}
	return Deeply_Nested_ABC
}

type ScreamingSnakeWithPrefxEnum struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field ScreamingSnakeWithPrefix `protobuf:"varint,1,opt,name=field,proto3,enum=ScreamingSnakeWithPrefix" json:"field,omitempty"`
}

func (x *ScreamingSnakeWithPrefxEnum) Reset() {
	*x = ScreamingSnakeWithPrefxEnum{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2e_e2e_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScreamingSnakeWithPrefxEnum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScreamingSnakeWithPrefxEnum) ProtoMessage() {}

func (x *ScreamingSnakeWithPrefxEnum) ProtoReflect() protoreflect.Message {
	mi := &file_e2e_e2e_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScreamingSnakeWithPrefxEnum.ProtoReflect.Descriptor instead.
func (*ScreamingSnakeWithPrefxEnum) Descriptor() ([]byte, []int) {
	return file_e2e_e2e_proto_rawDescGZIP(), []int{5}
}

func (x *ScreamingSnakeWithPrefxEnum) GetField() ScreamingSnakeWithPrefix {
	if x != nil {
		return x.Field
	}
	return ScreamingSnakeWithPrefix_SCREAMING_SNAKE_WITH_PREFIX_ABC
}

type MessageWithAttribute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: xml:"field,attr"
	Field RootEnum `protobuf:"varint,1,opt,name=field,proto3,enum=RootEnum" json:"field,omitempty" xml:"field,attr"`
}

func (x *MessageWithAttribute) Reset() {
	*x = MessageWithAttribute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2e_e2e_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageWithAttribute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageWithAttribute) ProtoMessage() {}

func (x *MessageWithAttribute) ProtoReflect() protoreflect.Message {
	mi := &file_e2e_e2e_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageWithAttribute.ProtoReflect.Descriptor instead.
func (*MessageWithAttribute) Descriptor() ([]byte, []int) {
	return file_e2e_e2e_proto_rawDescGZIP(), []int{6}
}

func (x *MessageWithAttribute) GetField() RootEnum {
	if x != nil {
		return x.Field
	}
	return RootEnum_ABC
}

type Deeply_Nested struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Deeply_Nested) Reset() {
	*x = Deeply_Nested{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e2e_e2e_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Deeply_Nested) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Deeply_Nested) ProtoMessage() {}

func (x *Deeply_Nested) ProtoReflect() protoreflect.Message {
	mi := &file_e2e_e2e_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Deeply_Nested.ProtoReflect.Descriptor instead.
func (*Deeply_Nested) Descriptor() ([]byte, []int) {
	return file_e2e_e2e_proto_rawDescGZIP(), []int{1, 0}
}

var File_e2e_e2e_proto protoreflect.FileDescriptor

var file_e2e_e2e_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x65, 0x32, 0x65, 0x2f, 0x65, 0x32, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x2b, 0x0a, 0x06, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x22, 0x21, 0x0a, 0x04, 0x45, 0x6e, 0x75,
	0x6d, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x42, 0x43, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x44, 0x45,
	0x46, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x47, 0x41, 0x48, 0x10, 0x02, 0x22, 0x35, 0x0a, 0x06,
	0x44, 0x65, 0x65, 0x70, 0x6c, 0x79, 0x1a, 0x2b, 0x0a, 0x06, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64,
	0x22, 0x21, 0x0a, 0x04, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x42, 0x43, 0x10,
	0x00, 0x12, 0x07, 0x0a, 0x03, 0x44, 0x45, 0x46, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x47, 0x41,
	0x48, 0x10, 0x02, 0x22, 0x36, 0x0a, 0x13, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x57, 0x69,
	0x74, 0x68, 0x52, 0x6f, 0x6f, 0x74, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x1f, 0x0a, 0x05, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x09, 0x2e, 0x52, 0x6f, 0x6f, 0x74,
	0x45, 0x6e, 0x75, 0x6d, 0x52, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x22, 0x3b, 0x0a, 0x15, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x57, 0x69, 0x74, 0x68, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64,
	0x45, 0x6e, 0x75, 0x6d, 0x12, 0x22, 0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x2e, 0x45, 0x6e, 0x75,
	0x6d, 0x52, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x22, 0x48, 0x0a, 0x1b, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x57, 0x69, 0x74, 0x68, 0x44, 0x65, 0x65, 0x70, 0x6c, 0x79, 0x4e, 0x65, 0x73,
	0x74, 0x65, 0x64, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x29, 0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x44, 0x65, 0x65, 0x70, 0x6c, 0x79, 0x2e,
	0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x05, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x22, 0x4e, 0x0a, 0x1b, 0x53, 0x63, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x53,
	0x6e, 0x61, 0x6b, 0x65, 0x57, 0x69, 0x74, 0x68, 0x50, 0x72, 0x65, 0x66, 0x78, 0x45, 0x6e, 0x75,
	0x6d, 0x12, 0x2f, 0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x19, 0x2e, 0x53, 0x63, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x53, 0x6e, 0x61, 0x6b,
	0x65, 0x57, 0x69, 0x74, 0x68, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x52, 0x05, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x22, 0x37, 0x0a, 0x14, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x57, 0x69, 0x74,
	0x68, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x05, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x09, 0x2e, 0x52, 0x6f, 0x6f, 0x74,
	0x45, 0x6e, 0x75, 0x6d, 0x52, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x2a, 0x25, 0x0a, 0x08, 0x52,
	0x6f, 0x6f, 0x74, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x42, 0x43, 0x10, 0x00,
	0x12, 0x07, 0x0a, 0x03, 0x44, 0x45, 0x46, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x47, 0x41, 0x48,
	0x10, 0x02, 0x2a, 0x89, 0x01, 0x0a, 0x18, 0x53, 0x63, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67,
	0x53, 0x6e, 0x61, 0x6b, 0x65, 0x57, 0x69, 0x74, 0x68, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12,
	0x23, 0x0a, 0x1f, 0x53, 0x43, 0x52, 0x45, 0x41, 0x4d, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x4e, 0x41,
	0x4b, 0x45, 0x5f, 0x57, 0x49, 0x54, 0x48, 0x5f, 0x50, 0x52, 0x45, 0x46, 0x49, 0x58, 0x5f, 0x41,
	0x42, 0x43, 0x10, 0x00, 0x12, 0x23, 0x0a, 0x1f, 0x53, 0x43, 0x52, 0x45, 0x41, 0x4d, 0x49, 0x4e,
	0x47, 0x5f, 0x53, 0x4e, 0x41, 0x4b, 0x45, 0x5f, 0x57, 0x49, 0x54, 0x48, 0x5f, 0x50, 0x52, 0x45,
	0x46, 0x49, 0x58, 0x5f, 0x44, 0x45, 0x46, 0x10, 0x01, 0x12, 0x23, 0x0a, 0x1f, 0x53, 0x43, 0x52,
	0x45, 0x41, 0x4d, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x4e, 0x41, 0x4b, 0x45, 0x5f, 0x57, 0x49, 0x54,
	0x48, 0x5f, 0x50, 0x52, 0x45, 0x46, 0x49, 0x58, 0x5f, 0x47, 0x41, 0x48, 0x10, 0x02, 0x42, 0x07,
	0x5a, 0x05, 0x2e, 0x3b, 0x65, 0x32, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_e2e_e2e_proto_rawDescOnce sync.Once
	file_e2e_e2e_proto_rawDescData = file_e2e_e2e_proto_rawDesc
)

func file_e2e_e2e_proto_rawDescGZIP() []byte {
	file_e2e_e2e_proto_rawDescOnce.Do(func() {
		file_e2e_e2e_proto_rawDescData = protoimpl.X.CompressGZIP(file_e2e_e2e_proto_rawDescData)
	})
	return file_e2e_e2e_proto_rawDescData
}

var file_e2e_e2e_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_e2e_e2e_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_e2e_e2e_proto_goTypes = []interface{}{
	(RootEnum)(0),                       // 0: RootEnum
	(ScreamingSnakeWithPrefix)(0),       // 1: ScreamingSnakeWithPrefix
	(Nested_Enum)(0),                    // 2: Nested.Enum
	(Deeply_Nested_Enum)(0),             // 3: Deeply.Nested.Enum
	(*Nested)(nil),                      // 4: Nested
	(*Deeply)(nil),                      // 5: Deeply
	(*MessageWithRootEnum)(nil),         // 6: MessageWithRootEnum
	(*MessageWithNestedEnum)(nil),       // 7: MessageWithNestedEnum
	(*MessageWithDeeplyNestedEnum)(nil), // 8: MessageWithDeeplyNestedEnum
	(*ScreamingSnakeWithPrefxEnum)(nil), // 9: ScreamingSnakeWithPrefxEnum
	(*MessageWithAttribute)(nil),        // 10: MessageWithAttribute
	(*Deeply_Nested)(nil),               // 11: Deeply.Nested
}
var file_e2e_e2e_proto_depIdxs = []int32{
	0, // 0: MessageWithRootEnum.field:type_name -> RootEnum
	2, // 1: MessageWithNestedEnum.field:type_name -> Nested.Enum
	3, // 2: MessageWithDeeplyNestedEnum.field:type_name -> Deeply.Nested.Enum
	1, // 3: ScreamingSnakeWithPrefxEnum.field:type_name -> ScreamingSnakeWithPrefix
	0, // 4: MessageWithAttribute.field:type_name -> RootEnum
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_e2e_e2e_proto_init() }
func file_e2e_e2e_proto_init() {
	if File_e2e_e2e_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_e2e_e2e_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Nested); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2e_e2e_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Deeply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2e_e2e_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageWithRootEnum); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2e_e2e_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageWithNestedEnum); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2e_e2e_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageWithDeeplyNestedEnum); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2e_e2e_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScreamingSnakeWithPrefxEnum); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2e_e2e_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageWithAttribute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e2e_e2e_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Deeply_Nested); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_e2e_e2e_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_e2e_e2e_proto_goTypes,
		DependencyIndexes: file_e2e_e2e_proto_depIdxs,
		EnumInfos:         file_e2e_e2e_proto_enumTypes,
		MessageInfos:      file_e2e_e2e_proto_msgTypes,
	}.Build()
	File_e2e_e2e_proto = out.File
	file_e2e_e2e_proto_rawDesc = nil
	file_e2e_e2e_proto_goTypes = nil
	file_e2e_e2e_proto_depIdxs = nil
}
